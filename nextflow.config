/*
Nextflow configuration file for SNPmatch on GMI Mendel

please edit config file if you want to implement to another cluster

*/
params {

  max_memory = 250.GB
  max_cpus = 24
  max_time = 48.h
  version = '2.2.0' // Pipeline version
  nf_required_version = '0.27.5' // Minimum version of nextflow required

}

executor {
  $pbs {
    name = 'pbs'
    queueSize = 1000
  }
}

process {

  executor = 'pbs'
  clusterOptions = { "-P $params.project " }
  cpus = 1
  memory = { check_max( 10.GB * task.attempt, 'memory') }
  time = { check_max( 3.h * task.attempt, 'time') }

  errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  maxRetries = 3
  maxErrors = '-1'

  module = ['snpmatch/2.5.0-foss-2017a-Python-2.7.13']

  $make_csv_inbred {
    module = ['R-bundle-Bioconductor/3.2-foss-2016a-R-3.2.3']
  }

  $make_csv_cross {
    module = ['R-bundle-Bioconductor/3.2-foss-2016a-R-3.2.3']
  }

  $genotype_cross{
    module.add( 'hmmlearn/0.2.1-foss-2017a-Python-2.7.13' )
  }

  $genotyper_csv{
    module.add( 'pyBsHap/1.1.0-foss-2017a-Python-2.7.13' )
  }

  $fill_geno {
    module = ['R-bundle-Bioconductor/3.2-foss-2016a-R-3.2.3']
  }

  $genotyper_hdf5{
    module.add( 'pyBsHap/1.1.0-foss-2017a-Python-2.7.13' )
  }
}
/*
// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']
timeline {
  enabled = true
  file = "${params.outdir}/pipeline_info/snpmatch_timeline.html"
}
report {
  enabled = true
  file = "${params.outdir}/pipeline_info/snpmatch_report.html"
}
trace {
  enabled = true
  file = "${params.outdir}/pipeline_info/snpmatch_trace.txt"
}
dag {
  enabled = true
  file = "${params.outdir}/pipeline_info/snpmatch_dag.svg"
}
*/
